{"version":3,"sources":["components/NewName.js","components/Contacts.js","components/Search.js","services/noteservices.js","components/Notification.js","App.js","index.js"],"names":["NewName","newName","newNumber","handleNumberChange","handleNameChange","handleSubmit","onSubmit","value","onChange","type","Contacts","persons","filtered","deletePerson","filteredPersons","i","length","push","map","x","id","key","name","number","Search","onSearch","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setFiltered","notification","setNotification","useEffect","noteService","result","showNotification","setTimeout","event","search","target","toLowerCase","includes","preventDefault","reduce","cond","window","confirm","newPerson","newNode","concat","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.777fa211.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst NewName = ({newName, newNumber, handleNumberChange, handleNameChange, handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n        <div>\r\n            name: <input value={newName} onChange={handleNameChange}/>\r\n        </div>\r\n        <div>\r\n            number: <input value={newNumber} onChange={handleNumberChange}/>\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">\r\n                add\r\n            </button>\r\n        </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewName","import React from 'react'\r\n\r\nconst Contacts = ({persons, filtered, deletePerson}) => {\r\n    let filteredPersons = []\r\n    for (let i=0; i<persons.length; i++){\r\n        if(!filtered[i]){\r\n            filteredPersons.push(persons[i])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {filteredPersons.map((x) => {\r\n                return (\r\n                <form id={x.id} onSubmit={deletePerson} key={x.name}>\r\n                    <p>{x.name} {x.number} \r\n                        <button type=\"submit\">delete</button>\r\n                        <br></br>\r\n                    </p>\r\n                </form>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contacts","import React from 'react'\r\n\r\nconst Search = ({onSearch}) => {\r\n    return (\r\n        <form>\r\n            filter shown with <input onChange={onSearch}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n    .then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n    .then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n    .then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n    .then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    remove\r\n}","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if(message === ''){\r\n        return (\r\n            <></>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='error'>\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport NewName from './components/NewName'\r\nimport Contacts from './components/Contacts'\r\nimport Search from './components/Search'\r\nimport noteService from './services/noteservices'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber] = useState('')\r\n    const [filtered, setFiltered] = useState([])\r\n    const [notification, setNotification] = useState('')\r\n\r\n    useEffect(() => {\r\n        noteService\r\n        .getAll()\r\n        .then(result => {\r\n            setPersons(result)\r\n            setFiltered(result.map(x => false))\r\n        })\r\n    } ,[])\r\n\r\n    const showNotification = (message) => {\r\n        setNotification(message)\r\n        setTimeout(() => setNotification('') , 3000)\r\n    }\r\n\r\n    const onSearch = (event) => {\r\n        const search = event.target.value.toLowerCase()\r\n\r\n\r\n        setFiltered(persons.map(x => {\r\n            if (!(x.name + x.number).toLowerCase().includes(search)){\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        }))\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (persons.reduce((cond, x) => {\r\n            if (x.name === newName){\r\n                cond = true\r\n                if(window.confirm(`${newName} is already added to pronebook, \r\n                replace the old number with a new one?`)){\r\n                    const newPerson = {\r\n                        name: newName,\r\n                        number: newNumber\r\n                    }\r\n                    noteService\r\n                    .update(x.id, newPerson)\r\n                    .then(() => {\r\n                        showNotification('successfully changed number')\r\n                        setNewName('')\r\n                        setNewNumber('')\r\n                        noteService\r\n                        .getAll()\r\n                        .then((result) => setPersons(result))\r\n                        setFiltered(persons.map(() => false))\r\n                    }, () => {\r\n                        showNotification(`${x.name} has already been deleted`)\r\n                    })\r\n                }\r\n            }\r\n            return cond\r\n        }, false)){\r\n            \r\n        } else {\r\n            setNewName('')\r\n            setNewNumber('')\r\n            \r\n            const newNode = {\r\n                name: newName, \r\n                number: newNumber\r\n            }\r\n\r\n            noteService\r\n            .create(newNode)\r\n            .then(result => {\r\n                setPersons(persons.concat(result))\r\n                setFiltered(filtered.concat(false))\r\n                showNotification(`added ${newNode.name} to contacts`)\r\n            }, result => {\r\n                console.log('failed posting new person')\r\n            })\r\n        }\r\n    }\r\n\r\n    const deletePerson = (event) => {\r\n        event.preventDefault()\r\n\r\n        if(window.confirm(`You sure?`)) {\r\n            noteService\r\n        .remove(event.target.id)\r\n        .then(() => {\r\n            noteService.getAll()\r\n            .then(result => {\r\n            console.log(result)\r\n            setPersons(result)\r\n            setFiltered(result.map(x => false))\r\n            showNotification('succesfully deleted')\r\n        }, () => showNotification('error deleting'))\r\n        })\r\n        }\r\n        \r\n    }\r\n\r\n    const handleNameChange = (event) => setNewName(event.target.value)\r\n    const handleNumberChange = (event) => setNewNumber(event.target.value)\r\n\r\n    return (\r\n    <div>\r\n        <h2>Phonebook</h2>\r\n        <Notification message={notification} />\r\n        <Search onSearch={onSearch} />\r\n        <h2>add a new contact</h2>\r\n        <NewName\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        handleNumberChange={handleNumberChange}\r\n        handleNameChange={handleNameChange}\r\n        handleSubmit={handleSubmit}\r\n        />\r\n        <h2>Numbers</h2>\r\n        <Contacts persons={persons}\r\n        filtered={filtered}\r\n        deletePerson={deletePerson}\r\n        />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}